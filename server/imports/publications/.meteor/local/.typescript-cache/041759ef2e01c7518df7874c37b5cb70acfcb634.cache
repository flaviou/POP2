{"code":"var core_1 = require('@angular/core');\r\nvar parties_upload_component_html_1 = require('./parties-upload.component.html');\r\nvar parties_upload_component_scss_1 = require('./parties-upload.component.scss');\r\nvar images_methods_1 = require('../../../../both/methods/images.methods');\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar meteor_rxjs_1 = require(\"meteor-rxjs\");\r\nvar images_collection_1 = require(\"../../../../both/collections/images.collection\");\r\nvar PartiesUploadComponent = (function () {\r\n    function PartiesUploadComponent() {\r\n        this.fileIsOver = false;\r\n        this.uploading = false;\r\n        this.filesArray = [];\r\n        this.files = new rxjs_1.Subject();\r\n        this.onFile = new core_1.EventEmitter();\r\n    }\r\n    PartiesUploadComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.files.subscribe(function (filesArray) {\r\n            meteor_rxjs_1.MeteorObservable.autorun().subscribe(function () {\r\n                if (_this.thumbsSubscription) {\r\n                    _this.thumbsSubscription.unsubscribe();\r\n                    _this.thumbsSubscription = undefined;\r\n                }\r\n                _this.thumbsSubscription = meteor_rxjs_1.MeteorObservable.subscribe(\"thumbs\", filesArray).subscribe(function () {\r\n                    _this.thumbs = images_collection_1.Thumbs.find({\r\n                        originalStore: 'images',\r\n                        originalId: {\r\n                            $in: filesArray\r\n                        }\r\n                    }).zone();\r\n                });\r\n            });\r\n        });\r\n    };\r\n    PartiesUploadComponent.prototype.fileOver = function (fileIsOver) {\r\n        this.fileIsOver = fileIsOver;\r\n    };\r\n    PartiesUploadComponent.prototype.onFileDrop = function (file) {\r\n        var _this = this;\r\n        this.uploading = true;\r\n        images_methods_1.upload(file)\r\n            .then(function (result) {\r\n            _this.uploading = false;\r\n            _this.addFile(result);\r\n        })\r\n            .catch(function (error) {\r\n            _this.uploading = false;\r\n            console.log(\"Something went wrong!\", error);\r\n        });\r\n    };\r\n    PartiesUploadComponent.prototype.addFile = function (file) {\r\n        this.filesArray.push(file._id);\r\n        this.files.next(this.filesArray);\r\n        this.onFile.emit(file._id);\r\n    };\r\n    PartiesUploadComponent.prototype.reset = function () {\r\n        this.filesArray = [];\r\n        this.files.next(this.filesArray);\r\n    };\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', (typeof (_a = typeof core_1.EventEmitter !== 'undefined' && core_1.EventEmitter) === 'function' && _a) || Object)\r\n    ], PartiesUploadComponent.prototype, \"onFile\", void 0);\r\n    PartiesUploadComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'parties-upload',\r\n            template: parties_upload_component_html_1.default,\r\n            styles: [parties_upload_component_scss_1.default]\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], PartiesUploadComponent);\r\n    return PartiesUploadComponent;\r\n    var _a;\r\n}());\r\nexports.PartiesUploadComponent = PartiesUploadComponent;\r\n//# sourceMappingURL=parties-upload.component.js.map","sourceMap":{"version":3,"file":"parties-upload.component.js","sourceRoot":"","sources":["client/imports/app/parties/parties-upload.component.ts"],"names":[],"mappings":"AAAA,qBAAsD,eAAe,CAAC,CAAA;AAEtE,8CAAqB,iCAAiC,CAAC,CAAA;AACvD,8CAAkB,iCAAiC,CAAC,CAAA;AAEpD,+BAAuB,yCAAyC,CAAC,CAAA;AACjE,qBAAgD,MAAM,CAAC,CAAA;AACvD,4BAA+B,aAAa,CAAC,CAAA;AAE7C,kCAAqB,gDAAgD,CAAC,CAAA;AAOtE;IASE;QARA,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAa,EAAE,CAAC;QAC1B,UAAK,GAAsB,IAAI,cAAO,EAAY,CAAC;QAGzC,WAAM,GAAyB,IAAI,mBAAY,EAAU,CAAC;IAErD,CAAC;IAEhB,yCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAC,UAAU;YAC9B,8BAAgB,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC;gBACnC,EAAE,CAAC,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAC5B,KAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;oBACtC,KAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;gBACtC,CAAC;gBAED,KAAI,CAAC,kBAAkB,GAAG,8BAAgB,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC;oBACnF,KAAI,CAAC,MAAM,GAAG,0BAAM,CAAC,IAAI,CAAC;wBACxB,aAAa,EAAE,QAAQ;wBACvB,UAAU,EAAE;4BACV,GAAG,EAAE,UAAU;yBAChB;qBACF,CAAC,CAAC,IAAI,EAAE,CAAC;gBACZ,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAQ,GAAR,UAAS,UAAmB;QAC1B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,2CAAU,GAAV,UAAW,IAAU;QAArB,iBAYC;QAXC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,uBAAM,CAAC,IAAI,CAAC;aACT,IAAI,CAAC,UAAC,MAAM;YACX,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAK;YACX,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,sCAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAnDD;QAAC,aAAM,EAAE;;0DAAA;IAZX;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,iDAAQ;YACR,MAAM,EAAE,CAAE,uCAAK,CAAE;SAClB,CAAC;;8BAAA;IA4DF,6BAAC;;AAAD,CAAC,AA3DD,IA2DC;AA3DY,8BAAsB,yBA2DlC,CAAA","sourcesContent":["import {Component, OnInit, EventEmitter, Output} from '@angular/core';\n\nimport template from './parties-upload.component.html';\nimport style from './parties-upload.component.scss';\n\nimport { upload } from '../../../../both/methods/images.methods';\nimport {Subject, Subscription, Observable} from \"rxjs\";\nimport {MeteorObservable} from \"meteor-rxjs\";\nimport {Thumb} from \"../../../../both/models/image.model\";\nimport {Thumbs} from \"../../../../both/collections/images.collection\";\n\n@Component({\n  selector: 'parties-upload',\n  template,\n  styles: [ style ]\n})\nexport class PartiesUploadComponent implements OnInit {\n  fileIsOver: boolean = false;\n  uploading: boolean = false;\n  filesArray: string[] = [];\n  files: Subject<string[]> = new Subject<string[]>();\n  thumbsSubscription: Subscription;\n  thumbs: Observable<Thumb[]>;\n  @Output() onFile: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {}\n\n  ngOnInit() {\n    this.files.subscribe((filesArray) => {\n      MeteorObservable.autorun().subscribe(() => {\n        if (this.thumbsSubscription) {\n          this.thumbsSubscription.unsubscribe();\n          this.thumbsSubscription = undefined;\n        }\n\n        this.thumbsSubscription = MeteorObservable.subscribe(\"thumbs\", filesArray).subscribe(() => {\n          this.thumbs = Thumbs.find({\n            originalStore: 'images',\n            originalId: {\n              $in: filesArray\n            }\n          }).zone();\n        });\n      });\n    });\n  }\n\n  fileOver(fileIsOver: boolean): void {\n    this.fileIsOver = fileIsOver;\n  }\n\n  onFileDrop(file: File): void {\n    this.uploading = true;\n\n    upload(file)\n      .then((result) => {\n        this.uploading = false;\n        this.addFile(result);\n      })\n      .catch((error) => {\n        this.uploading = false;\n        console.log(`Something went wrong!`, error);\n      });\n  }\n\n  addFile(file) {\n    this.filesArray.push(file._id);\n    this.files.next(this.filesArray);\n    this.onFile.emit(file._id);\n  }\n\n  reset() {\n    this.filesArray = [];\n    this.files.next(this.filesArray);\n  }\n}"]},"version":"1","isExternal":true,"references":{"files":[],"modules":["both/methods/images.methods.ts","both/models/image.model.ts","both/collections/images.collection.ts"],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/parties/parties-upload.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":55},{"code":2307,"fileName":"client/imports/app/parties/parties-upload.component.ts","message":"Cannot find module 'rxjs'.","line":7,"column":49},{"code":2307,"fileName":"client/imports/app/parties/parties-upload.component.ts","message":"Cannot find module 'meteor-rxjs'.","line":8,"column":32}]},"hash":"041759ef2e01c7518df7874c37b5cb70acfcb634"}