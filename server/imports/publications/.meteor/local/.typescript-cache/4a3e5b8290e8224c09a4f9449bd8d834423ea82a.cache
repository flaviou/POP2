{"code":"var core_1 = require('@angular/core');\r\nvar router_1 = require('@angular/router');\r\nvar meteor_1 = require('meteor/meteor');\r\nvar meteor_rxjs_1 = require('meteor-rxjs');\r\nvar angular2_meteor_accounts_ui_1 = require(\"angular2-meteor-accounts-ui\");\r\nrequire('rxjs/add/operator/map');\r\nvar parties_collection_1 = require('../../../../both/collections/parties.collection');\r\nvar users_collection_1 = require('../../../../both/collections/users.collection');\r\nvar party_details_component_html_1 = require('./party-details.component.html');\r\nvar party_details_component_scss_1 = require('./party-details.component.scss');\r\nvar PartyDetailsComponent = (function () {\r\n    function PartyDetailsComponent(route) {\r\n        this.route = route;\r\n        // Default center Palo Alto coordinates.\r\n        this.centerLat = 37.4292;\r\n        this.centerLng = -122.1381;\r\n    }\r\n    PartyDetailsComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.paramsSub = this.route.params\r\n            .map(function (params) { return params['partyId']; })\r\n            .subscribe(function (partyId) {\r\n            _this.partyId = partyId;\r\n            if (_this.partySub) {\r\n                _this.partySub.unsubscribe();\r\n            }\r\n            _this.partySub = meteor_rxjs_1.MeteorObservable.subscribe('party', _this.partyId).subscribe(function () {\r\n                meteor_rxjs_1.MeteorObservable.autorun().subscribe(function () {\r\n                    _this.party = parties_collection_1.Parties.findOne(_this.partyId);\r\n                    _this.getUsers(_this.party);\r\n                });\r\n            });\r\n            if (_this.uninvitedSub) {\r\n                _this.uninvitedSub.unsubscribe();\r\n            }\r\n            _this.uninvitedSub = meteor_rxjs_1.MeteorObservable.subscribe('uninvited', _this.partyId).subscribe(function () {\r\n                _this.getUsers(_this.party);\r\n            });\r\n        });\r\n    };\r\n    PartyDetailsComponent.prototype.getUsers = function (party) {\r\n        if (party) {\r\n            this.users = users_collection_1.Users.find({\r\n                _id: {\r\n                    $nin: party.invited || [],\r\n                    $ne: meteor_1.Meteor.userId()\r\n                }\r\n            }).zone();\r\n        }\r\n    };\r\n    PartyDetailsComponent.prototype.saveParty = function () {\r\n        if (!meteor_1.Meteor.userId()) {\r\n            alert('Please log in to change this party');\r\n            return;\r\n        }\r\n        parties_collection_1.Parties.update(this.party._id, {\r\n            $set: {\r\n                name: this.party.name,\r\n                description: this.party.description,\r\n                location: this.party.location,\r\n                'public': this.party.public\r\n            }\r\n        });\r\n    };\r\n    PartyDetailsComponent.prototype.invite = function (user) {\r\n        meteor_rxjs_1.MeteorObservable.call('invite', this.party._id, user._id).subscribe(function () {\r\n            alert('User successfully invited.');\r\n        }, function (error) {\r\n            alert(\"Failed to invite due to \" + error);\r\n        });\r\n    };\r\n    PartyDetailsComponent.prototype.reply = function (rsvp) {\r\n        meteor_rxjs_1.MeteorObservable.call('reply', this.party._id, rsvp).subscribe(function () {\r\n            alert('You successfully replied.');\r\n        }, function (error) {\r\n            alert(\"Failed to reply due to \" + error);\r\n        });\r\n    };\r\n    Object.defineProperty(PartyDetailsComponent.prototype, \"isOwner\", {\r\n        get: function () {\r\n            return this.party && this.user && this.user._id === this.party.owner;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PartyDetailsComponent.prototype, \"isPublic\", {\r\n        get: function () {\r\n            return this.party && this.party.public;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PartyDetailsComponent.prototype, \"isInvited\", {\r\n        get: function () {\r\n            if (this.party && this.user) {\r\n                var invited = this.party.invited || [];\r\n                return invited.indexOf(this.user._id) !== -1;\r\n            }\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PartyDetailsComponent.prototype, \"lat\", {\r\n        get: function () {\r\n            return this.party && this.party.location.lat;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PartyDetailsComponent.prototype, \"lng\", {\r\n        get: function () {\r\n            return this.party && this.party.location.lng;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PartyDetailsComponent.prototype.mapClicked = function ($event) {\r\n        this.party.location.lat = $event.coords.lat;\r\n        this.party.location.lng = $event.coords.lng;\r\n    };\r\n    PartyDetailsComponent.prototype.ngOnDestroy = function () {\r\n        this.paramsSub.unsubscribe();\r\n        this.partySub.unsubscribe();\r\n        this.uninvitedSub.unsubscribe();\r\n    };\r\n    PartyDetailsComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'party-details',\r\n            template: party_details_component_html_1.default,\r\n            styles: [party_details_component_scss_1.default]\r\n        }),\r\n        angular2_meteor_accounts_ui_1.InjectUser('user'), \r\n        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _a) || Object])\r\n    ], PartyDetailsComponent);\r\n    return PartyDetailsComponent;\r\n    var _a;\r\n}());\r\nexports.PartyDetailsComponent = PartyDetailsComponent;\r\n//# sourceMappingURL=party-details.component.js.map","sourceMap":{"version":3,"file":"party-details.component.js","sourceRoot":"","sources":["client/imports/app/parties/party-details.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Meteor } from 'meteor/meteor';\nimport { MeteorObservable } from 'meteor-rxjs';\nimport { InjectUser } from \"angular2-meteor-accounts-ui\";\nimport { MouseEvent } from \"angular2-google-maps/core\";\n\nimport 'rxjs/add/operator/map';\n\nimport { Parties } from '../../../../both/collections/parties.collection';\nimport { Party } from '../../../../both/models/party.model';\nimport { Users } from '../../../../both/collections/users.collection';\nimport { User } from '../../../../both/models/user.model';\n\nimport template from './party-details.component.html';\nimport style from './party-details.component.scss';\n\n@Component({\n  selector: 'party-details',\n  template,\n  styles: [ style ]\n})\n@InjectUser('user')\nexport class PartyDetailsComponent implements OnInit, OnDestroy {\n  partyId: string;\n  paramsSub: Subscription;\n  party: Party;\n  partySub: Subscription;\n  users: Observable<User>;\n  uninvitedSub: Subscription;\n  user: Meteor.User;\n  // Default center Palo Alto coordinates.\n  centerLat: number = 37.4292;\n  centerLng: number = -122.1381;\n\n  constructor(\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.paramsSub = this.route.params\n      .map(params => params['partyId'])\n      .subscribe(partyId => {\n        this.partyId = partyId;\n        \n        if (this.partySub) {\n          this.partySub.unsubscribe();\n        }\n\n        this.partySub = MeteorObservable.subscribe('party', this.partyId).subscribe(() => {\n          MeteorObservable.autorun().subscribe(() => {\n            this.party = Parties.findOne(this.partyId);\n            this.getUsers(this.party);\n          });\n        });\n\n        if (this.uninvitedSub) {\n          this.uninvitedSub.unsubscribe();\n        }\n\n        this.uninvitedSub = MeteorObservable.subscribe('uninvited', this.partyId).subscribe(() => {\n          this.getUsers(this.party);\n        });\n      });\n  }\n\n  getUsers(party: Party) {\n    if (party) {\n      this.users = Users.find({\n        _id: {\n          $nin: party.invited || [],\n          $ne: Meteor.userId()\n        }\n      }).zone();\n    }\n  }\n\n  saveParty() {\n    if (!Meteor.userId()) {\n      alert('Please log in to change this party');\n      return;\n    }\n    \n    Parties.update(this.party._id, {\n      $set: {\n        name: this.party.name,\n        description: this.party.description,\n        location: this.party.location,\n        'public': this.party.public\n      }\n    });\n  }\n\n  invite(user: Meteor.User) {\n    MeteorObservable.call('invite', this.party._id, user._id).subscribe(() => {\n      alert('User successfully invited.');\n    }, (error) => {\n      alert(`Failed to invite due to ${error}`);\n    });\n  }\n\n  reply(rsvp: string) {\n    MeteorObservable.call('reply', this.party._id, rsvp).subscribe(() => {\n      alert('You successfully replied.');\n    }, (error) => {\n      alert(`Failed to reply due to ${error}`);\n    });\n  }\n\n  get isOwner(): boolean {\n    return this.party && this.user && this.user._id === this.party.owner;\n  }\n\n  get isPublic(): boolean {\n    return this.party && this.party.public;\n  }\n\n  get isInvited(): boolean {\n    if (this.party && this.user) {\n      const invited = this.party.invited || [];\n\n      return invited.indexOf(this.user._id) !== -1;\n    }\n\n    return false;\n  }\n\n\n  get lat(): number {\n    return this.party && this.party.location.lat;\n  }\n\n  get lng(): number {\n    return this.party && this.party.location.lng;\n  }\n\n  mapClicked($event: MouseEvent) {\n    this.party.location.lat = $event.coords.lat;\n    this.party.location.lng = $event.coords.lng;\n  }\n\n  ngOnDestroy() {\n    this.paramsSub.unsubscribe();\n    this.partySub.unsubscribe();\n    this.uninvitedSub.unsubscribe();\n  }\n}\n"]},"version":"1","isExternal":true,"references":{"files":[],"modules":["both/collections/parties.collection.ts","both/models/party.model.ts","both/collections/users.collection.ts","both/models/user.model.ts"],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":46},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module '@angular/router'.","line":2,"column":32},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'rxjs/Observable'.","line":3,"column":28},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'rxjs/Subscription'.","line":4,"column":30},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'meteor/meteor'.","line":5,"column":24},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'meteor-rxjs'.","line":6,"column":34},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'angular2-meteor-accounts-ui'.","line":7,"column":28},{"code":2307,"fileName":"client/imports/app/parties/party-details.component.ts","message":"Cannot find module 'angular2-google-maps/core'.","line":8,"column":28}]},"hash":"4a3e5b8290e8224c09a4f9449bd8d834423ea82a"}