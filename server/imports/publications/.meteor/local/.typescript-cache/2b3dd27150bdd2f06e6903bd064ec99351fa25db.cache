{"code":"var core_1 = require('@angular/core');\r\nvar forms_1 = require('@angular/forms');\r\nvar router_1 = require('@angular/router');\r\nvar meteor_1 = require('meteor/meteor');\r\nvar login_component_html_1 = require('./login.component.html');\r\nvar LoginComponent = (function () {\r\n    function LoginComponent(router, zone, formBuilder) {\r\n        this.router = router;\r\n        this.zone = zone;\r\n        this.formBuilder = formBuilder;\r\n    }\r\n    LoginComponent.prototype.ngOnInit = function () {\r\n        this.loginForm = this.formBuilder.group({\r\n            email: ['', forms_1.Validators.required],\r\n            password: ['', forms_1.Validators.required]\r\n        });\r\n        this.error = '';\r\n    };\r\n    LoginComponent.prototype.login = function () {\r\n        var _this = this;\r\n        if (this.loginForm.valid) {\r\n            meteor_1.Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, function (err) {\r\n                _this.zone.run(function () {\r\n                    if (err) {\r\n                        _this.error = err;\r\n                    }\r\n                    else {\r\n                        _this.router.navigate(['/']);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n    LoginComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'login',\r\n            template: login_component_html_1.default\r\n        }), \r\n        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _a) || Object, (typeof (_b = typeof core_1.NgZone !== 'undefined' && core_1.NgZone) === 'function' && _b) || Object, (typeof (_c = typeof forms_1.FormBuilder !== 'undefined' && forms_1.FormBuilder) === 'function' && _c) || Object])\r\n    ], LoginComponent);\r\n    return LoginComponent;\r\n    var _a, _b, _c;\r\n}());\r\nexports.LoginComponent = LoginComponent;\r\n//# sourceMappingURL=login.component.js.map","sourceMap":{"version":3,"file":"login.component.js","sourceRoot":"","sources":["client/imports/app/auth/login.component.ts"],"names":[],"mappings":"AAAA,qBAAwC,eAAe,CAAC,CAAA;AACxD,sBAAmD,gBAAgB,CAAC,CAAA;AACpE,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,uBAAuB,eAAe,CAAC,CAAA;AAEvC,qCAAqB,wBAAwB,CAAC,CAAA;AAM9C;IAIE,wBAAoB,MAAc,EAAU,IAAY,EAAU,WAAwB;QAAtE,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAE9F,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,8BAAK,GAAL;QAAA,iBAYC;QAXC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACzB,eAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAC,GAAG;gBACtF,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;wBACR,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;oBACnB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC9B,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IA/BH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,OAAO;YACjB,wCAAQ;SACT,CAAC;;sBAAA;IA6BF,qBAAC;;AAAD,CAAC,AA5BD,IA4BC;AA5BY,sBAAc,iBA4B1B,CAAA","sourcesContent":["import {Component, OnInit, NgZone} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Meteor } from 'meteor/meteor';\n\nimport template from './login.component.html';\n\n@Component({\n  selector: 'login',\n  template\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  error: string;\n\n  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.error = '';\n  }\n\n  login() {\n    if (this.loginForm.valid) {\n      Meteor.loginWithPassword(this.loginForm.value.email, this.loginForm.value.password, (err) => {\n        this.zone.run(() => {\n          if (err) {\n            this.error = err;\n          } else {\n            this.router.navigate(['/']);\n          }\n        });\n      });\n    }\n  }\n}"]},"version":"1","isExternal":true,"references":{"files":[],"modules":[],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/auth/login.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":41},{"code":2307,"fileName":"client/imports/app/auth/login.component.ts","message":"Cannot find module '@angular/forms'.","line":2,"column":52},{"code":2307,"fileName":"client/imports/app/auth/login.component.ts","message":"Cannot find module '@angular/router'.","line":3,"column":24},{"code":2307,"fileName":"client/imports/app/auth/login.component.ts","message":"Cannot find module 'meteor/meteor'.","line":4,"column":24}]},"hash":"2b3dd27150bdd2f06e6903bd064ec99351fa25db"}