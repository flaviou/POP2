{"code":"var meteor_rxjs_1 = require('meteor-rxjs');\r\nvar jalik_ufs_1 = require('meteor/jalik:ufs');\r\nexports.Images = new meteor_rxjs_1.MongoObservable.Collection('images');\r\nexports.Thumbs = new meteor_rxjs_1.MongoObservable.Collection('thumbs');\r\nfunction loggedIn(userId) {\r\n    return !!userId;\r\n}\r\nexports.ThumbsStore = new jalik_ufs_1.UploadFS.store.GridFS({\r\n    collection: exports.Thumbs.collection,\r\n    name: 'thumbs',\r\n    permissions: new jalik_ufs_1.UploadFS.StorePermissions({\r\n        insert: loggedIn,\r\n        update: loggedIn,\r\n        remove: loggedIn\r\n    }),\r\n    transformWrite: function (from, to, fileId, file) {\r\n        // Resize to 32x32\r\n        var gm = require('gm');\r\n        gm(from, file.name)\r\n            .resize(32, 32)\r\n            .gravity('Center')\r\n            .extent(32, 32)\r\n            .quality(75)\r\n            .stream()\r\n            .pipe(to);\r\n    }\r\n});\r\nexports.ImagesStore = new jalik_ufs_1.UploadFS.store.GridFS({\r\n    collection: exports.Images.collection,\r\n    name: 'images',\r\n    filter: new jalik_ufs_1.UploadFS.Filter({\r\n        contentTypes: ['image/*']\r\n    }),\r\n    copyTo: [\r\n        exports.ThumbsStore\r\n    ],\r\n    permissions: new jalik_ufs_1.UploadFS.StorePermissions({\r\n        insert: loggedIn,\r\n        update: loggedIn,\r\n        remove: loggedIn\r\n    })\r\n});\r\n//# sourceMappingURL=images.collection.js.map","sourceMap":{"version":3,"file":"images.collection.js","sourceRoot":"","sources":["both/collections/images.collection.ts"],"names":[],"mappings":"AAAA,4BAAgC,aAAa,CAAC,CAAA;AAE9C,0BAAyB,kBAAkB,CAAC,CAAA;AAG/B,cAAM,GAAG,IAAI,6BAAe,CAAC,UAAU,CAAQ,QAAQ,CAAC,CAAC;AACzD,cAAM,GAAG,IAAI,6BAAe,CAAC,UAAU,CAAQ,QAAQ,CAAC,CAAC;AAEtE,kBAAkB,MAAM;IACtB,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;AAClB,CAAC;AAEY,mBAAW,GAAG,IAAI,oBAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;IACnD,UAAU,EAAE,cAAM,CAAC,UAAU;IAC7B,IAAI,EAAE,QAAQ;IACd,WAAW,EAAE,IAAI,oBAAQ,CAAC,gBAAgB,CAAC;QACzC,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;KACjB,CAAC;IACF,cAAc,YAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI;QACnC,kBAAkB;QAClB,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAEzB,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;aAChB,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;aACd,OAAO,CAAC,QAAQ,CAAC;aACjB,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC;aACd,OAAO,CAAC,EAAE,CAAC;aACX,MAAM,EAAE;aACR,IAAI,CAAC,EAAE,CAAC,CAAC;IACd,CAAC;CACF,CAAC,CAAC;AAEU,mBAAW,GAAG,IAAI,oBAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;IACnD,UAAU,EAAE,cAAM,CAAC,UAAU;IAC7B,IAAI,EAAE,QAAQ;IACd,MAAM,EAAE,IAAI,oBAAQ,CAAC,MAAM,CAAC;QAC1B,YAAY,EAAE,CAAC,SAAS,CAAC;KAC1B,CAAC;IACF,MAAM,EAAE;QACN,mBAAW;KACZ;IACD,WAAW,EAAE,IAAI,oBAAQ,CAAC,gBAAgB,CAAC;QACzC,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;KACjB,CAAC;CACH,CAAC,CAAC","sourcesContent":["import { MongoObservable } from 'meteor-rxjs';\nimport { Meteor } from 'meteor/meteor';\nimport { UploadFS } from 'meteor/jalik:ufs';\nimport { Thumb, Image } from \"../models/image.model\";\n\nexport const Images = new MongoObservable.Collection<Image>('images');\nexport const Thumbs = new MongoObservable.Collection<Thumb>('thumbs');\n\nfunction loggedIn(userId) {\n  return !!userId;\n}\n\nexport const ThumbsStore = new UploadFS.store.GridFS({\n  collection: Thumbs.collection,\n  name: 'thumbs',\n  permissions: new UploadFS.StorePermissions({\n    insert: loggedIn,\n    update: loggedIn,\n    remove: loggedIn\n  }),\n  transformWrite(from, to, fileId, file) {\n    // Resize to 32x32\n    const gm = require('gm');\n\n    gm(from, file.name)\n      .resize(32, 32)\n      .gravity('Center')\n      .extent(32, 32)\n      .quality(75)\n      .stream()\n      .pipe(to);\n  }\n});\n\nexport const ImagesStore = new UploadFS.store.GridFS({\n  collection: Images.collection,\n  name: 'images',\n  filter: new UploadFS.Filter({\n    contentTypes: ['image/*']\n  }),\n  copyTo: [\n    ThumbsStore\n  ],\n  permissions: new UploadFS.StorePermissions({\n    insert: loggedIn,\n    update: loggedIn,\n    remove: loggedIn\n  })\n});\n\n"]},"version":"1","isExternal":true,"references":{"files":[],"modules":["both/models/image.model.ts"],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"both/collections/images.collection.ts","message":"Cannot find module 'meteor-rxjs'.","line":1,"column":33},{"code":2307,"fileName":"both/collections/images.collection.ts","message":"Cannot find module 'meteor/meteor'.","line":2,"column":24},{"code":2304,"fileName":"both/collections/images.collection.ts","message":"Cannot find name 'require'.","line":23,"column":16}]},"hash":"9de1c91a8bb689933e1677750f9117be1cd3ff42"}