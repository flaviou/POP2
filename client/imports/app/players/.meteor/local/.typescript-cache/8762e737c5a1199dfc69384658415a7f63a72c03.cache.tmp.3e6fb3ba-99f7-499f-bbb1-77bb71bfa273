{"code":"var meteor_1 = require('meteor/meteor');\r\nvar tmeasday_publish_counts_1 = require('meteor/tmeasday:publish-counts');\r\nvar players_collection_1 = require('../../../both/collections/players.collection');\r\nmeteor_1.Meteor.publish('players', function (options) {\r\n    var selector = buildQuery.call(this, null);\r\n    tmeasday_publish_counts_1.Counts.publish(this, 'numberOfPlayers', players_collection_1.Players.collection.find(selector), { noReady: true });\r\n    return players_collection_1.Players.find(selector);\r\n});\r\nmeteor_1.Meteor.publish('player', function (playerId) {\r\n    return players_collection_1.Players.find(buildQuery.call(this, playerId));\r\n});\r\nfunction buildQuery(playerId) {\r\n    var isAvailable = {\r\n        $or: [{\r\n                \"RegularSeason.Points\": { $gt: \"0\" }\r\n            }]\r\n    };\r\n    if (playerId) {\r\n        return {\r\n            // only single party\r\n            $and: [{\r\n                    _id: playerId\r\n                },\r\n                isAvailable\r\n            ]\r\n        };\r\n    }\r\n    // const searchRegEx = { '$regex': '.*' + (location || '') + '.*', '$options': 'i' };\r\n    return {\r\n        $and: [\r\n            isAvailable\r\n        ]\r\n    };\r\n}\r\n//# sourceMappingURL=players.js.map","sourceMap":{"version":3,"file":"players.js","sourceRoot":"","sources":["server/imports/publications/players.ts"],"names":[],"mappings":"AAAA,uBAAuB,eAAe,CAAC,CAAA;AACvC,wCAAuB,gCAAgC,CAAC,CAAA;AAExD,mCAAwB,8CAA8C,CAAC,CAAA;AAMvE,eAAM,CAAC,OAAO,CAAC,SAAS,EAAE,UAAS,OAAgB;IACjD,IAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAE7C,gCAAM,CAAC,OAAO,CAAC,IAAI,EAAE,iBAAiB,EAAE,4BAAO,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IAE9F,MAAM,CAAC,4BAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;AAEH,eAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAS,QAAgB;IAChD,MAAM,CAAC,4BAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC;AAGH,oBAAoB,QAAiB;IACnC,IAAM,WAAW,GAAG;QAClB,GAAG,EAAE,CAAC;gBACJ,sBAAsB,EAAE,EAAC,GAAG,EAAC,GAAG,EAAC;aAClC,CAAC;KACH,CAAC;IAEF,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACb,MAAM,CAAC;YACL,oBAAoB;YACpB,IAAI,EAAE,CAAC;oBACH,GAAG,EAAE,QAAQ;iBACd;gBACD,WAAW;aACZ;SACF,CAAC;IACJ,CAAC;IAED,qFAAqF;IAErF,MAAM,CAAC;QACL,IAAI,EAAE;YACJ,WAAW;SACZ;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Counts } from 'meteor/tmeasday:publish-counts';\n\nimport { Players } from '../../../both/collections/players.collection';\n\ninterface Options {\n  [key: string]: any;\n}\n\nMeteor.publish('players', function(options: Options) {\n  const selector = buildQuery.call(this, null);\n\n  Counts.publish(this, 'numberOfPlayers', Players.collection.find(selector), { noReady: true });\n\n  return Players.find(selector);\n});\n\nMeteor.publish('player', function(playerId: string) {\n  return Players.find(buildQuery.call(this, playerId));\n});\n\n\nfunction buildQuery(playerId?: string): Object {\n  const isAvailable = {\n    $or: [{\n      \"RegularSeason.Points\": {$gt:\"0\"}\n    }]\n  };\n\n  if (playerId) {\n    return {\n      // only single party\n      $and: [{\n          _id: playerId\n        },\n        isAvailable\n      ]\n    };\n  }\n\n  // const searchRegEx = { '$regex': '.*' + (location || '') + '.*', '$options': 'i' };\n\n  return {\n    $and: [\n      isAvailable\n    ]\n  };\n}\n"]},"version":"1","isExternal":true,"references":{"files":[],"modules":["both/collections/players.collection.ts"],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"server/imports/publications/players.ts","message":"Cannot find module 'meteor/meteor'.","line":1,"column":24}]},"hash":"8762e737c5a1199dfc69384658415a7f63a72c03"}