{"code":"var core_1 = require('@angular/core');\r\nvar forms_1 = require('@angular/forms');\r\nvar router_1 = require('@angular/router');\r\nvar accounts_base_1 = require('meteor/accounts-base');\r\nvar recover_component_html_1 = require('./recover.component.html');\r\nvar RecoverComponent = (function () {\r\n    function RecoverComponent(router, zone, formBuilder) {\r\n        this.router = router;\r\n        this.zone = zone;\r\n        this.formBuilder = formBuilder;\r\n    }\r\n    RecoverComponent.prototype.ngOnInit = function () {\r\n        this.recoverForm = this.formBuilder.group({\r\n            email: ['', forms_1.Validators.required]\r\n        });\r\n        this.error = '';\r\n    };\r\n    RecoverComponent.prototype.recover = function () {\r\n        var _this = this;\r\n        if (this.recoverForm.valid) {\r\n            accounts_base_1.Accounts.forgotPassword({\r\n                email: this.recoverForm.value.email\r\n            }, function (err) {\r\n                if (err) {\r\n                    _this.zone.run(function () {\r\n                        _this.error = err;\r\n                    });\r\n                }\r\n                else {\r\n                    _this.router.navigate(['/']);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    RecoverComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'recover',\r\n            template: recover_component_html_1.default\r\n        }), \r\n        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _a) || Object, (typeof (_b = typeof core_1.NgZone !== 'undefined' && core_1.NgZone) === 'function' && _b) || Object, (typeof (_c = typeof forms_1.FormBuilder !== 'undefined' && forms_1.FormBuilder) === 'function' && _c) || Object])\r\n    ], RecoverComponent);\r\n    return RecoverComponent;\r\n    var _a, _b, _c;\r\n}());\r\nexports.RecoverComponent = RecoverComponent;\r\n//# sourceMappingURL=recover.component.js.map","sourceMap":{"version":3,"file":"recover.component.js","sourceRoot":"","sources":["client/imports/app/auth/recover.component.ts"],"names":[],"mappings":"AAAA,qBAAwC,eAAe,CAAC,CAAA;AACxD,sBAAmD,gBAAgB,CAAC,CAAA;AACpE,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,8BAAyB,sBAAsB,CAAC,CAAA;AAEhD,uCAAqB,0BAA0B,CAAC,CAAA;AAMhD;IAIE,0BAAoB,MAAc,EAAU,IAAY,EAAU,WAAwB;QAAtE,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAE9F,mCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,KAAK,EAAE,CAAC,EAAE,EAAE,kBAAU,CAAC,QAAQ,CAAC;SACjC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,kCAAO,GAAP;QAAA,iBAcC;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3B,wBAAQ,CAAC,cAAc,CAAC;gBACtB,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK;aACpC,EAAE,UAAC,GAAG;gBACL,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACR,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;wBACZ,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;oBACnB,CAAC,CAAC,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAhCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,0CAAQ;SACT,CAAC;;wBAAA;IA8BF,uBAAC;;AAAD,CAAC,AA7BD,IA6BC;AA7BY,wBAAgB,mBA6B5B,CAAA","sourcesContent":["import {Component, OnInit, NgZone} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport template from './recover.component.html';\n\n@Component({\n  selector: 'recover',\n  template\n})\nexport class RecoverComponent implements OnInit {\n  recoverForm: FormGroup;\n  error: string;\n\n  constructor(private router: Router, private zone: NgZone, private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.recoverForm = this.formBuilder.group({\n      email: ['', Validators.required]\n    });\n\n    this.error = '';\n  }\n\n  recover() {\n    if (this.recoverForm.valid) {\n      Accounts.forgotPassword({\n        email: this.recoverForm.value.email\n      }, (err) => {\n        if (err) {\n          this.zone.run(() => {\n            this.error = err;\n          });\n        } else {\n          this.router.navigate(['/']);\n        }\n      });\n    }\n  }\n}"]},"version":"1","isExternal":true,"references":{"files":[],"modules":[],"typings":[]},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/auth/recover.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":41},{"code":2307,"fileName":"client/imports/app/auth/recover.component.ts","message":"Cannot find module '@angular/forms'.","line":2,"column":52},{"code":2307,"fileName":"client/imports/app/auth/recover.component.ts","message":"Cannot find module '@angular/router'.","line":3,"column":24},{"code":2307,"fileName":"client/imports/app/auth/recover.component.ts","message":"Cannot find module 'meteor/accounts-base'.","line":4,"column":26}]},"hash":"2ada46aacf1d62efd4cbe7a20997b30d08cc72e2"}